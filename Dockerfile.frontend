# Frontend Dockerfile
FROM node:16-alpine as builder

# Установка системных зависимостей
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Создание рабочей директории
WORKDIR /app

# Копирование package.json файлов
COPY package*.json ./
COPY client/package*.json ./client/

# Установка зависимостей
RUN npm ci && \
    cd client && npm ci

# Копирование исходного кода
COPY client/ ./client/

# Сборка приложения
RUN cd client && npm run build

# Production stage
FROM nginx:alpine

# Копирование собранного приложения
COPY --from=builder /app/client/build /usr/share/nginx/html

# Копирование конфигурации nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Создание пользователя для безопасности
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginx -u 1001

# Изменение владельца файлов
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Создание директории для runtime файлов
RUN touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Переключение на пользователя nginx
USER nginx

# Открытие порта
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Запуск nginx
CMD ["nginx", "-g", "daemon off;"]
